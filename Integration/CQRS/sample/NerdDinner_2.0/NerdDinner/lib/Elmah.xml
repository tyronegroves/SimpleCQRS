<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elmah</name>
    </assembly>
    <members>
        <member name="T:Elmah.AboutPage">
            <summary>
            Renders an HTML page that presents information about the version,
            build configuration, source files as well as a method to check
            for updates.
            </summary>
        </member>
        <member name="T:Elmah.ErrorPageBase">
            <summary>
            Provides the base implementation and layout for most pages that render 
            HTML for the error log.
            </summary>
        </member>
        <member name="T:Elmah.ApplicationException">
            <summary>
            The exception that is thrown when a non-fatal error occurs. 
            This exception also serves as the base for all exceptions thrown by
            this library.
            </summary>
        </member>
        <member name="M:Elmah.ApplicationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ApplicationException"/> class.
            </summary>
        </member>
        <member name="M:Elmah.ApplicationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ApplicationException"/> class 
            with a specified error message.
            </summary>
        </member>
        <member name="M:Elmah.ApplicationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ApplicationException"/> 
            class with a specified error message and a reference to the 
            inner exception that is the cause of this exception.
            </summary>
        </member>
        <member name="M:Elmah.ApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ApplicationException"/> class 
            with serialized data.
            </summary>
        </member>
        <member name="T:Elmah.AccessErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses Microsoft Access 
            as its backing store.
            </summary>
            <remarks>
            The MDB file is automatically created at the path specified in the 
            connection string if it does not already exist.
            </remarks>
        </member>
        <member name="T:Elmah.ErrorLog">
            <summary>
            Represents an error log capable of storing and retrieving errors
            generated in an ASP.NET Web application.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error in log for the application.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.BeginLog(Elmah.Error,System.AsyncCallback,System.Object)">
            <summary>
            When overridden in a subclass, begins an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.Log(Elmah.Error)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.EndLog(System.IAsyncResult)">
            <summary>
            When overridden in a subclass, ends an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.Log(Elmah.Error)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetError(System.String)">
            <summary>
            Retrieves a single application error from log given its 
            identifier, or null if it does not exist.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.BeginGetError(System.String,System.AsyncCallback,System.Object)">
            <summary>
            When overridden in a subclass, begins an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.GetError(System.String)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.EndGetError(System.IAsyncResult)">
            <summary>
            When overridden in a subclass, ends an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.GetError(System.String)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)">
            <summary>
            Retrieves a page of application errors from the log in 
            descending order of logged time.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.BeginGetErrors(System.Int32,System.Int32,System.Collections.IList,System.AsyncCallback,System.Object)">
            <summary>
            When overridden in a subclass, begins an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.EndGetErrors(System.IAsyncResult)">
            <summary>
            When overridden in a subclass, ends an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetDefault(System.Web.HttpContext)">
            <summary>
            Gets the default error log implementation specified in the 
            configuration file, or the in-memory log implemention if
            none is configured.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLog.Name">
            <summary>
            Get the name of this log.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLog.ApplicationName">
            <summary>
            Gets the name of the application to which the log is scoped.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLog.Default">
            <summary>
            Gets the default error log implementation specified in the 
            configuration file, or the in-memory log implemention if
            none is configured.
            </summary>
        </member>
        <member name="M:Elmah.AccessErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.AccessErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="M:Elmah.AccessErrorLog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.AccessErrorLog"/> class
            to use a specific connection string for connecting to the database.
            </summary>
        </member>
        <member name="M:Elmah.AccessErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the database.
            </summary>
            <remarks>
            Use the stored procedure called by this implementation to set a
            policy on how long errors are kept in the log. The default
            implementation stores all errors for an indefinite time.
            </remarks>
        </member>
        <member name="M:Elmah.AccessErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)">
            <summary>
            Returns a page of errors from the databse in descending order 
            of logged time.
            </summary>
        </member>
        <member name="M:Elmah.AccessErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from the database, or null 
            if it does not exist.
            </summary>
        </member>
        <member name="P:Elmah.AccessErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
        <member name="P:Elmah.AccessErrorLog.ConnectionString">
            <summary>
            Gets the connection string used by the log to connect to the database.
            </summary>
        </member>
        <member name="T:Elmah.Assertions.AssertionFactoryHandler">
            <summary>
            Represents the method that will be responsible for creating an 
            assertion object and initializing it from an XML configuration
            element.
            </summary>
        </member>
        <member name="T:Elmah.Assertions.AssertionFactory">
            <summary>
            Holds factory methods for creating configured assertion objects.
            </summary>
        </member>
        <member name="M:Elmah.Assertions.AssertionFactory.DecodeClrTypeNamespaceFromXmlNamespace(System.String,System.String@,System.String@)">
            <remarks>
            Ideally, we would be able to use SoapServices.DecodeXmlNamespaceForClrTypeNamespace
            but that requires a link demand permission that will fail in partially trusted
            environments such as ASP.NET medium trust.
            </remarks>
        </member>
        <member name="T:Elmah.Assertions.ComparisonAssertion">
            <summary>
            An assertion implementation whose test is based on whether
            the result of an input expression evaluated against a context
            matches a regular expression pattern or not.
            </summary>
        </member>
        <member name="T:Elmah.Assertions.IAssertion">
            <summary>
            Provides evaluation of a context to determine whether it matches
            certain criteria or not.
            </summary>
        </member>
        <member name="M:Elmah.Assertions.IAssertion.Test(System.Object)">
            <remarks>
            The context is typed generically as System.Object when it could have
            been restricted to System.Web.HttpContext and also avoid unnecessary
            casting downstream. However, using object allows simple
            assertions to be unit-tested without having to stub out a lot of
            the classes from System.Web (most of which cannot be stubbed anyhow
            due to lack of virtual and instance methods).
            </remarks>
        </member>
        <member name="T:Elmah.Assertions.CompositeAssertion">
            <summary>
            Read-only collection of <see cref="T:Elmah.Assertions.IAssertion"/> instances.
            </summary>
        </member>
        <member name="T:Elmah.DataBinder">
            <summary>
            Provides data expression evaluation facilites similar to 
            <see cref="T:System.Web.UI.DataBinder"/> in ASP.NET.
            </summary>
        </member>
        <member name="T:Elmah.Assertions.JScriptAssertion">
            <summary>
            An assertion implementation that uses a JScript expression to
            determine the outcome.
            </summary>
            <remarks>
            Each instance of this type maintains a separate copy of the JScript 
            engine so use it sparingly. For example, instead of creating several
            objects, each with different a expression, try and group all
            expressions that apply to particular context into a single compound 
            JScript expression using the conditional-OR (||) operator.
            </remarks>
        </member>
        <member name="T:Elmah.Assertions.JScriptAssertion.PartialTrustEvaluationStrategy">
            <summary>
            Uses the JScript eval function to compile and evaluate the
            expression against the context on each evaluation.
            </summary>
        </member>
        <member name="T:Elmah.Assertions.JScriptAssertion.FullTrustEvaluationStrategy">
            <summary>
            Compiles the given expression into a JScript function at time of 
            construction and then simply invokes it during evaluation, using
            the context as a parameter.
            </summary>
        </member>
        <member name="T:Elmah.Assertions.RegexMatchAssertion">
            <summary>
            An assertion implementation whose test is based on whether
            the result of an input expression evaluated against a context
            matches a regular expression pattern or not.
            </summary>
        </member>
        <member name="T:Elmah.Assertions.StaticAssertion">
            <summary>
            An static assertion implementation that always evaluates to 
            a preset value.
            </summary>
        </member>
        <member name="T:Elmah.Assertions.TypeAssertion">
            <summary>
            An assertion implementation whose test is based on whether
            the result of an input expression evaluated against a context
            matches a regular expression pattern or not.
            </summary>
        </member>
        <member name="F:Elmah.Build.Status">
            <summary>
            This is the status or milestone of the build. Examples are
            M1, M2, ..., Mn, BETA1, BETA2, RC1, RC2, RTM.
            </summary>
        </member>
        <member name="P:Elmah.Build.ImageRuntimeVersion">
            <summary>
            Gets a string representing the version of the CLR saved in 
            the file containing the manifest. Under 1.0, this returns
            the hard-wired string "v1.0.3705".
            </summary>
        </member>
        <member name="T:Elmah.ConfigurationSectionHelper">
            <summary>
            Helper class for handling values in configuration sections.
            </summary>
        </member>
        <member name="T:Elmah.ConnectionStringHelper">
            <summary>
            Helper class for resolving connection strings.
            </summary>
        </member>
        <member name="M:Elmah.ConnectionStringHelper.GetConnectionString(System.Collections.IDictionary)">
            <summary>
            Gets the connection string from the given configuration 
            dictionary.
            </summary>
        </member>
        <member name="M:Elmah.ConnectionStringHelper.GetDataSourceFilePath(System.String)">
            <summary>
            Extracts the Data Source file path from a connection string
            ~/ gets resolved as does |DataDirectory|
            </summary>
        </member>
        <member name="M:Elmah.ConnectionStringHelper.GetConnectionString(System.Collections.IDictionary,System.Boolean)">
            <summary>
            Gets the connection string from the given configuration,
            resolving ~/ and DataDirectory if necessary.
            </summary>
        </member>
        <member name="M:Elmah.ConnectionStringHelper.GetResolvedConnectionString(System.String)">
            <summary>
            Converts the supplied connection string so that the Data Source 
            specification contains the full path and not ~/ or DataDirectory.
            </summary>
        </member>
        <member name="T:Elmah.Debug">
            <summary>
            Provides methods for assertions and debugging help that is mostly 
            applicable during development.
            </summary>
        </member>
        <member name="T:Elmah.Error">
            <summary>
            Represents a logical application error (as opposed to the actual 
            exception it may be representing).
            </summary>
        </member>
        <member name="M:Elmah.Error.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.Error"/> class.
            </summary>
        </member>
        <member name="M:Elmah.Error.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.Error"/> class
            from a given <see cref="P:Elmah.Error.Exception"/> instance.
            </summary>
        </member>
        <member name="M:Elmah.Error.#ctor(System.Exception,System.Web.HttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.Error"/> class
            from a given <see cref="P:Elmah.Error.Exception"/> instance and 
            <see cref="T:System.Web.HttpContext"/> instance representing the HTTP 
            context during the exception.
            </summary>
        </member>
        <member name="M:Elmah.Error.ToString">
            <summary>
            Returns the value of the <see cref="P:Elmah.Error.Message"/> property.
            </summary>
        </member>
        <member name="M:Elmah.Error.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="P:Elmah.Error.Exception">
            <summary>
            Gets the <see cref="P:Elmah.Error.Exception"/> instance used to initialize this
            instance.
            </summary>
            <remarks>
            This is a run-time property only that is not written or read 
            during XML serialization via <see cref="M:Elmah.ErrorXml.Decode(System.Xml.XmlReader)"/> and 
            <see cref="M:Elmah.ErrorXml.Encode(Elmah.Error,System.Xml.XmlWriter)"/>.
            </remarks>
        </member>
        <member name="P:Elmah.Error.ApplicationName">
            <summary>
            Gets or sets the name of application in which this error occurred.
            </summary>
        </member>
        <member name="P:Elmah.Error.HostName">
            <summary>
            Gets or sets name of host machine where this error occurred.
            </summary>
        </member>
        <member name="P:Elmah.Error.Type">
            <summary>
            Gets or sets the type, class or category of the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Source">
            <summary>
            Gets or sets the source that is the cause of the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Message">
            <summary>
            Gets or sets a brief text describing the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Detail">
            <summary>
            Gets or sets a detailed text describing the error, such as a
            stack trace.
            </summary>
        </member>
        <member name="P:Elmah.Error.User">
            <summary>
            Gets or sets the user logged into the application at the time 
            of the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Time">
            <summary>
            Gets or sets the date and time (in local time) at which the 
            error occurred.
            </summary>
        </member>
        <member name="P:Elmah.Error.StatusCode">
            <summary>
            Gets or sets the HTTP status code of the output returned to the 
            client for the error.
            </summary>
            <remarks>
            For cases where this value cannot always be reliably determined, 
            the value may be reported as zero.
            </remarks>
        </member>
        <member name="P:Elmah.Error.WebHostHtmlMessage">
            <summary>
            Gets or sets the HTML message generated by the web host (ASP.NET) 
            for the given error.
            </summary>
        </member>
        <member name="P:Elmah.Error.ServerVariables">
            <summary>
            Gets a collection representing the Web server variables
            captured as part of diagnostic data for the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.QueryString">
            <summary>
            Gets a collection representing the Web query string variables
            captured as part of diagnostic data for the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Form">
            <summary>
            Gets a collection representing the form variables captured as 
            part of diagnostic data for the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Cookies">
            <summary>
            Gets a collection representing the client cookies
            captured as part of diagnostic data for the error.
            </summary>
        </member>
        <member name="T:Elmah.ErrorDetailPage">
            <summary>
            Renders an HTML page displaying details about an error from the 
            error log.
            </summary>
        </member>
        <member name="T:Elmah.ErrorDigestRssHandler">
            <summary>
            Renders an RSS feed that is a daily digest of the most recently 
            recorded errors in the error log. The feed spans at most 15
            days on which errors occurred.
            </summary>
        </member>
        <member name="T:Elmah.ErrorDisplay">
            <summary>
            Provides miscellaneous formatting methods for 
            </summary>
        </member>
        <member name="M:Elmah.ErrorDisplay.HumaneExceptionErrorType(System.String)">
            <summary>
            Formats the type of an error, typically supplied as the 
            <see cref="P:Elmah.Error.Type"/> value, in a short and human-
            readable form.
            </summary>
            <remarks>
            Typically, exception type names can be long to display and 
            complex to consume. The essential part can usually be found in
            the start of an exception type name minus its namespace. For
            example, a human reading the string,
            "System.Runtime.InteropServices.COMException", will usually
            considers "COM" as the most useful component of the entire
            type name. This method does exactly that. It assumes that the
            the input type is a .NET Framework exception type name where
            the namespace and class will be separated by the last 
            period (.) and where the type name ends in "Exception". If
            these conditions are method then a string like,
            "System.Web.HttpException" will be transformed into simply
            "Html".
            </remarks>
        </member>
        <member name="M:Elmah.ErrorDisplay.HumaneExceptionErrorType(Elmah.Error)">
            <summary>
            Formats the error type of an <see cref="T:Elmah.Error"/> object in a 
            short and human-readable form.
            </summary>
        </member>
        <member name="T:Elmah.ErrorFilterModule">
            <summary>
            HTTP module implementation that logs unhandled exceptions in an
            ASP.NET Web application to an error log.
            </summary>
        </member>
        <member name="M:Elmah.ErrorFilterModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes the module and prepares it to handle requests.
            </summary>
        </member>
        <member name="M:Elmah.ErrorFilterModule.Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module.
            </summary>
        </member>
        <member name="T:Elmah.ErrorFilterSectionHandler">
            <summary>
            Handler for the &lt;errorFilter&gt; section of the
            configuration file.
            </summary>
        </member>
        <member name="T:Elmah.ErrorHtmlPage">
            <summary>
            Renders an HTML page displaying the detailed host-generated (ASP.NET)
            HTML recorded for an error from the error log.
            </summary>
        </member>
        <member name="T:Elmah.ErrorJson">
            <summary>
            Responsible for primarily encoding the JSON representation of
            <see cref="T:Elmah.Error"/> objects.
            </summary>
        </member>
        <member name="M:Elmah.ErrorJson.EncodeString(Elmah.Error)">
            <summary>
            Encodes the default JSON representation of an <see cref="T:Elmah.Error"/> 
            object to a string.
            </summary>
            <remarks>
            Only properties and collection entires with non-null
            and non-empty strings are emitted.
            </remarks>
        </member>
        <member name="M:Elmah.ErrorJson.Encode(Elmah.Error,System.IO.TextWriter)">
            <summary>
            Encodes the default JSON representation of an <see cref="T:Elmah.Error"/> 
            object to a <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <remarks>
            Only properties and collection entires with non-null
            and non-empty strings are emitted.
            </remarks>
        </member>
        <member name="T:Elmah.ErrorJsonHandler">
            <summary>
            Renders an error as JSON Text (RFC 4627).
            </summary>
        </member>
        <member name="T:Elmah.ErrorLogDataSourceAdapter">
            <summary>
            Methods of this type are designed to serve an
            <see cref="T:System.Web.UI.WebControls.ObjectDataSource"/> control
            and are adapted according to expected call signatures and
            behavior.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogDataSourceAdapter.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Elmah.ErrorLogDataSourceAdapter"/> class with the default
            error log implementation.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogDataSourceAdapter.GetErrorCount">
            <summary>
            Use as the value for <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogDataSourceAdapter.GetErrors(System.Int32,System.Int32)">
            <summary>
            Use as the value for <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod"/>.
            </summary>
            <remarks>
            The parameters of this method are named after the default values
            for <see cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName"/> 
            and <see cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName"/> so
            that the minimum markup is needed for the object data source
            control.
            </remarks>
        </member>
        <member name="T:Elmah.ErrorLogEntry">
            <summary>
            Binds an <see cref="P:Elmah.ErrorLogEntry.Error"/> instance with the <see cref="T:Elmah.ErrorLog"/>
            instance from where it was served.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogEntry.#ctor(Elmah.ErrorLog,System.String,Elmah.Error)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ErrorLogEntry"/> class
            for a given unique error entry in an error log.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLogEntry.Log">
            <summary>
            Gets the <see cref="T:Elmah.ErrorLog"/> instance where this entry 
            originated from.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLogEntry.Id">
            <summary>
            Gets the unique identifier that identifies the error entry 
            in the log.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLogEntry.Error">
            <summary>
            Gets the <see cref="P:Elmah.ErrorLogEntry.Error"/> object held in the entry.
            </summary>
        </member>
        <member name="T:Elmah.ErrorLogModule">
            <summary>
            HTTP module implementation that logs unhandled exceptions in an
            ASP.NET Web application to an error log.
            </summary>
        </member>
        <member name="T:Elmah.HttpModuleBase">
            <summary>
            Provides an abstract base class for <see cref="T:System.Web.IHttpModule"/> that
            supports discovery from within partial trust environments.
            </summary>
        </member>
        <member name="M:Elmah.HttpModuleBase.OnInit(System.Web.HttpApplication)">
            <summary>
            Initializes the module and prepares it to handle requests.
            </summary>
        </member>
        <member name="M:Elmah.HttpModuleBase.OnDispose">
            <summary>
            Disposes of the resources (other than memory) used by the module.
            </summary>
        </member>
        <member name="P:Elmah.HttpModuleBase.SupportDiscoverability">
            <summary>
            Determines whether the module will be registered for discovery
            in partial trust environments or not.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogModule.OnInit(System.Web.HttpApplication)">
            <summary>
            Initializes the module and prepares it to handle requests.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogModule.GetErrorLog(System.Web.HttpContext)">
            <summary>
            Gets the <see cref="T:Elmah.ErrorLog"/> instance to which the module
            will log exceptions.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogModule.OnError(System.Object,System.EventArgs)">
            <summary>
            The handler called when an unhandled exception bubbles up to 
            the module.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogModule.OnErrorSignaled(System.Object,Elmah.ErrorSignalEventArgs)">
            <summary>
            The handler called when an exception is explicitly signaled.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogModule.LogException(System.Exception,System.Web.HttpContext)">
            <summary>
            Logs an exception and its context to the error log.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogModule.OnLogged(Elmah.ErrorLoggedEventArgs)">
            <summary>
            Raises the <see cref="E:Elmah.ErrorLogModule.Logged"/> event.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogModule.OnFiltering(Elmah.ExceptionFilterEventArgs)">
            <summary>
            Raises the <see cref="E:Elmah.ErrorLogModule.Filtering"/> event.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLogModule.SupportDiscoverability">
            <summary>
            Determines whether the module will be registered for discovery
            in partial trust environments or not.
            </summary>
        </member>
        <member name="T:Elmah.ErrorLogPage">
            <summary>
            Renders an HTML page displaying a page of errors from the error log.
            </summary>
        </member>
        <member name="T:Elmah.ErrorLogPageFactory">
            <summary>
            HTTP handler factory that dispenses handlers for rendering views and 
            resources needed to display the error log.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogPageFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Returns an object that implements the <see cref="T:System.Web.IHttpHandler"/> 
            interface and which is responsible for serving the request.
            </summary>
            <returns>
            A new <see cref="T:System.Web.IHttpHandler"/> object that processes the request.
            </returns>
        </member>
        <member name="M:Elmah.ErrorLogPageFactory.ReleaseHandler(System.Web.IHttpHandler)">
            <summary>
            Enables the factory to reuse an existing handler instance.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogPageFactory.IsAuthorized(System.Web.HttpContext)">
            <summary>
            Determines if the request is authorized by objects implementing
            <see cref="T:Elmah.IRequestAuthorizationHandler"/>.
            </summary>
            <returns>
            Returns zero if unauthorized, a value greater than zero if 
            authorized otherwise a value less than zero if no handlers
            were available to answer.
            </returns>
        </member>
        <member name="T:Elmah.ErrorLogSectionHandler">
            <summary>
            Handler for the &lt;errorLog&gt; section of the
            configuration file.
            </summary>
        </member>
        <member name="T:Elmah.ErrorMailHtmlFormatter">
            <summary>
            Formats the HTML to display the details of a given error that is
            suitable for sending as the body of an e-mail message.
            </summary>
        </member>
        <member name="T:Elmah.ErrorTextFormatter">
            <summary>
            Provides the base contract for implementations that render
            text-based formatting for an error.
            </summary>
        </member>
        <member name="M:Elmah.ErrorTextFormatter.Format(System.IO.TextWriter,Elmah.Error)">
            <summary>
            Formats a text representation of the given <see cref="T:Elmah.Error"/> 
            instance using a <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="P:Elmah.ErrorTextFormatter.MimeType">
            <summary>
            Gets the MIME type of the text format provided by the formatter
            implementation.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.Format(System.IO.TextWriter,Elmah.Error)">
            <summary>
            Formats a complete HTML document describing the given 
            <see cref="P:Elmah.ErrorMailHtmlFormatter.Error"/> instance.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.RenderHead">
            <summary>
            Renders the &lt;head&gt; section of the HTML document.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.RenderBody">
            <summary>
            Renders the &lt;body&gt; section of the HTML document.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.RenderFooter">
            <summary>
            Renders the footer content that appears at the end of the 
            HTML document body.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.RenderStyle">
            <summary>
            Renders the &lt;style&gt; element along with in-line styles
            used to format the body of the HTML document.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.RenderDetail">
            <summary>
            Renders the details about the <see cref="P:Elmah.ErrorMailHtmlFormatter.Error"/> object in
            body of the HTML document.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.RenderSummary">
            <summary>
            Renders a summary about the <see cref="P:Elmah.ErrorMailHtmlFormatter.Error"/> object in
            body of the HTML document.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.RenderCollections">
            <summary>
            Renders the diagnostic collections of the <see cref="P:Elmah.ErrorMailHtmlFormatter.Error"/> object in
            body of the HTML document.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailHtmlFormatter.RenderCollection(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Renders a collection as a table in HTML document body.
            </summary>
            <remarks>
            This method is called by <see cref="M:Elmah.ErrorMailHtmlFormatter.RenderCollections"/> to 
            format a diagnostic collection from <see cref="P:Elmah.ErrorMailHtmlFormatter.Error"/> object.
            </remarks>
        </member>
        <member name="P:Elmah.ErrorMailHtmlFormatter.MimeType">
            <summary>
            Returns the text/html MIME type that is the format provided 
            by this <see cref="T:Elmah.ErrorTextFormatter"/> implementation.
            </summary>
        </member>
        <member name="P:Elmah.ErrorMailHtmlFormatter.Writer">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriter"/> used for HTML formatting.
            </summary>
            <remarks>
            This property is only available to downstream methods in the
            context of the <see cref="M:Elmah.ErrorMailHtmlFormatter.Format(System.IO.TextWriter,Elmah.Error)"/> method call.
            </remarks>
        </member>
        <member name="P:Elmah.ErrorMailHtmlFormatter.Error">
            <summary>
            Gets the <see cref="P:Elmah.ErrorMailHtmlFormatter.Error"/> object for which a HTML document
            is being formatted.
            </summary>
            <remarks>
            This property is only available to downstream methods in the
            context of the <see cref="M:Elmah.ErrorMailHtmlFormatter.Format(System.IO.TextWriter,Elmah.Error)"/> method call.
            </remarks>
        </member>
        <member name="T:Elmah.ErrorMailModule">
            <summary>
            HTTP module that sends an e-mail whenever an unhandled exception
            occurs in an ASP.NET web application.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.OnInit(System.Web.HttpApplication)">
            <summary>
            Initializes the module and prepares it to handle requests.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.OnError(System.Object,System.EventArgs)">
            <summary>
            The handler called when an unhandled exception bubbles up to 
            the module.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.OnErrorSignaled(System.Object,Elmah.ErrorSignalEventArgs)">
            <summary>
            The handler called when an exception is explicitly signaled.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.OnError(System.Exception,System.Web.HttpContext)">
            <summary>
            Reports the exception.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.OnFiltering(Elmah.ExceptionFilterEventArgs)">
            <summary>
            Raises the <see cref="E:Elmah.ErrorMailModule.Filtering"/> event.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.ReportErrorAsync(Elmah.Error)">
            <summary>
            Schedules the error to be e-mailed asynchronously.
            </summary>
            <remarks>
            The default implementation uses the <see cref="T:System.Threading.ThreadPool"/>
            to queue the reporting.
            </remarks>
        </member>
        <member name="M:Elmah.ErrorMailModule.ReportError(Elmah.Error)">
            <summary>
            Schedules the error to be e-mailed synchronously.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.CreateErrorFormatter">
            <summary>
            Creates the <see cref="T:Elmah.ErrorTextFormatter"/> implementation to 
            be used to format the body of the e-mail.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.SendMail(System.Net.Mail.MailMessage)">
            <summary>
            Sends the e-mail using SmtpMail or SmtpClient.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.OnMailing(Elmah.ErrorMailEventArgs)">
            <summary>
            Fires the <see cref="E:Elmah.ErrorMailModule.Mailing"/> event.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.OnMailed(Elmah.ErrorMailEventArgs)">
            <summary>
            Fires the <see cref="E:Elmah.ErrorMailModule.Mailed"/> event.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.OnDisposingMail(Elmah.ErrorMailEventArgs)">
            <summary>
            Fires the <see cref="E:Elmah.ErrorMailModule.DisposingMail"/> event.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.GetConfig">
            <summary>
            Gets the configuration object used by <see cref="M:Elmah.ErrorMailModule.OnInit(System.Web.HttpApplication)"/> to read
            the settings for module.
            </summary>
        </member>
        <member name="M:Elmah.ErrorMailModule.GetLastError(System.Web.HttpContext)">
            <summary>
            Builds an <see cref="T:Elmah.Error"/> object from the last context
            exception generated.
            </summary>
        </member>
        <member name="P:Elmah.ErrorMailModule.SupportDiscoverability">
            <summary>
            Determines whether the module will be registered for discovery
            in partial trust environments or not.
            </summary>
        </member>
        <member name="P:Elmah.ErrorMailModule.MailSender">
            <summary>
            Gets the e-mail address of the sender.
            </summary>
        </member>
        <member name="P:Elmah.ErrorMailModule.MailRecipient">
            <summary>
            Gets the e-mail address of the recipient, or a 
            comma-/semicolon-delimited list of e-mail addresses in case of 
            multiple recipients.
            </summary>
            <remarks>
            When using System.Web.Mail components under .NET Framework 1.x, 
            multiple recipients must be semicolon-delimited.
            When using System.Net.Mail components under .NET Framework 2.0
            or later, multiple recipients must be comma-delimited.
            </remarks>
        </member>
        <member name="P:Elmah.ErrorMailModule.MailCopyRecipient">
            <summary>
            Gets the e-mail address of the recipient for mail carbon 
            copy (CC), or a comma-/semicolon-delimited list of e-mail 
            addresses in case of multiple recipients.
            </summary>
            <remarks>
            When using System.Web.Mail components under .NET Framework 1.x, 
            multiple recipients must be semicolon-delimited.
            When using System.Net.Mail components under .NET Framework 2.0
            or later, multiple recipients must be comma-delimited.
            </remarks>
        </member>
        <member name="P:Elmah.ErrorMailModule.MailSubjectFormat">
            <summary>
            Gets the text used to format the e-mail subject.
            </summary>
            <remarks>
            The subject text specification may include {0} where the
            error message (<see cref="P:Elmah.Error.Message"/>) should be inserted 
            and {1} <see cref="P:Elmah.Error.Type"/> where the error type should 
            be insert.
            </remarks>
        </member>
        <member name="P:Elmah.ErrorMailModule.SmtpServer">
            <summary>
            Gets the SMTP server host name used when sending the mail.
            </summary>
        </member>
        <member name="P:Elmah.ErrorMailModule.SmtpPort">
            <summary>
            Gets the SMTP port used when sending the mail.
            </summary>
        </member>
        <member name="P:Elmah.ErrorMailModule.AuthUserName">
            <summary>
            Gets the user name to use if the SMTP server requires authentication.
            </summary>
        </member>
        <member name="P:Elmah.ErrorMailModule.AuthPassword">
            <summary>
            Gets the clear-text password to use if the SMTP server requires 
            authentication.
            </summary>
        </member>
        <member name="T:Elmah.ErrorMailSectionHandler">
            <summary>
            Handler for the &lt;errorMail&gt; section of the
            configuration file.
            </summary>
        </member>
        <member name="T:Elmah.ErrorRssHandler">
            <summary>
            Renders a XML using the RSS 0.91 vocabulary that displays, at most,
            the 15 most recent errors recorded in the error log.
            </summary>
        </member>
        <member name="T:Elmah.ErrorXml">
            <summary>
            Responsible for encoding and decoding the XML representation of
            an <see cref="T:Elmah.Error"/> object.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.DecodeString(System.String)">
            <summary>
            Decodes an <see cref="T:Elmah.Error"/> object from its default XML 
            representation.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.Decode(System.Xml.XmlReader)">
            <summary>
            Decodes an <see cref="T:Elmah.Error"/> object from its XML representation.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.ReadXmlAttributes(System.Xml.XmlReader,Elmah.Error)">
            <summary>
            Reads the error data in XML attributes.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.ReadInnerXml(System.Xml.XmlReader,Elmah.Error)">
            <summary>
            Reads the error data in child nodes.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.EncodeString(Elmah.Error)">
            <summary>
            Encodes the default XML representation of an <see cref="T:Elmah.Error"/> 
            object to a string.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.Encode(Elmah.Error,System.Xml.XmlWriter)">
            <summary>
            Encodes the XML representation of an <see cref="T:Elmah.Error"/> object.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.WriteXmlAttributes(Elmah.Error,System.Xml.XmlWriter)">
            <summary>
            Writes the error data that belongs in XML attributes.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.WriteInnerXml(Elmah.Error,System.Xml.XmlWriter)">
            <summary>
            Writes the error data that belongs in child nodes.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.Encode(System.Collections.Specialized.NameValueCollection,System.Xml.XmlWriter)">
            <summary>
            Encodes an XML representation for a 
            <see cref="T:System.Collections.Specialized.NameValueCollection"/> object.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.UpcodeTo(System.Xml.XmlReader,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Updates an existing <see cref="T:System.Collections.Specialized.NameValueCollection"/> object from
            its XML representation.
            </summary>
        </member>
        <member name="T:Elmah.ErrorXmlHandler">
            <summary>
            Renders an error as an XML document.
            </summary>
        </member>
        <member name="T:Elmah.FixIIS5xWildcardMappingModule">
            <summary>
            HTTP module that resolves issues in ELMAH when wilcard mapping
            is implemented in IIS 5.x.
            </summary>
            <remarks>
            See <a href="http://groups.google.com/group/elmah/browse_thread/thread/c22b85ace3812da1">Elmah 
            with existing wildcard mapping</a> for more information behind the 
            reason for this module.
            </remarks>
        </member>
        <member name="T:Elmah.HtmlLinkType">
            <summary>
            User agents, search engines, etc. may interpret and use these link 
            types in a variety of ways. For example, user agents may provide 
            access to linked documents through a navigation bar.
            </summary>
            <remarks>
            See <a href="http://www.w3.org/TR/html401/types.html#type-links">6.12 Link types</a>
            for more information.
            </remarks>
        </member>
        <member name="T:Elmah.HttpRequestSecurity">
            <summary>
            Security-related helper methods for web requests.
            </summary>
        </member>
        <member name="M:Elmah.HttpRequestSecurity.IsLocal(System.Web.HttpRequest)">
            <summary>
            Determines whether the request is from the local computer or not.
            </summary>
            <remarks>
            This method is primarily for .NET Framework 1.x where the
            <see cref="P:System.Web.HttpRequest.IsLocal"/> was not available.
            </remarks>
        </member>
        <member name="T:Elmah.HttpStatus">
            <summary>
            Represents an HTTP status (code plus reason) as per 
            <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.1">Section 6.1 of RFC 2616</a>.
            </summary>
        </member>
        <member name="T:Elmah.InvariantStringArray">
            <summary> 
            Helper methods for array containing culturally-invariant strings.
            The main reason for this helper is to help with po
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if one of the conditions is satisfied. 
            To set the condition, mark one of the parameters with <see cref="T:JetBrains.Annotations.AssertionConditionAttribute"/> attribute.
            </summary>
            <seealso cref="T:JetBrains.Annotations.AssertionConditionAttribute"/>
        </member>
        <member name="T:JetBrains.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. 
            The method itself should be marked by <see cref="T:JetBrains.Annotations.AssertionMethodAttribute"/> attribute.
            The mandatory argument of the attribute is the assertion type.
            </summary>
            <seealso cref="T:JetBrains.Annotations.AssertionConditionType"/>
        </member>
        <member name="M:JetBrains.Annotations.AssertionConditionAttribute.#ctor(JetBrains.Annotations.AssertionConditionType)">
            <summary>
            Initializes new instance of AssertionConditionAttribute.
            </summary>
            <param name="conditionType">Specifies condition type.</param>
        </member>
        <member name="P:JetBrains.Annotations.AssertionConditionAttribute.ConditionType">
            <summary>
            Gets condition type.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisifes the condition, then the execution continues. 
            Otherwise, execution is assumed to be halted.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_TRUE">
            <summary>
            Indicates that the marked parameter should be evaluated to true.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_FALSE">
            <summary>
            Indicates that the marked parameter should be evaluated to false.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_NULL">
            <summary>
            Indicates that the marked parameter should be evaluated to null value.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>
            Indicates that the marked parameter should be evaluated to not null value.
            </summary>
        </member>
        <member name="T:Elmah.JsonTextWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only 
            way of generating streams or files containing JSON Text according
            to the grammar rules laid out in 
            <a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>.
            </summary>
            <remarks>
            This class supports ELMAH and is not intended to be used directly 
            from your code. It may be modified or removed in the future without 
            notice. It has public accessibility for testing purposes. If you
            need a general-purpose JSON Text encoder, consult
            <a href="http://www.json.org/">JSON.org</a> for implementations
            or use classes available from the Microsoft .NET Framework.
            </remarks>
        </member>
        <member name="T:Elmah.ManifestResourceHandler">
            <summary>
            Reads a resource from the assembly manifest and returns its contents
            as the response entity.
            </summary>
        </member>
        <member name="T:Elmah.Mask">
            <summary>
            Collection of utility methods for masking values.
            </summary>
        </member>
        <member name="T:Elmah.MemoryErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses memory as its 
            backing store. 
            </summary>
            <remarks>
            All <see cref="T:Elmah.MemoryErrorLog"/> instances will share the same memory 
            store that is bound to the application (not an instance of this class).
            </remarks>
        </member>
        <member name="F:Elmah.MemoryErrorLog.MaximumSize">
            <summary>
            The maximum number of errors that will ever be allowed to be stored
            in memory.
            </summary>
        </member>
        <member name="F:Elmah.MemoryErrorLog.DefaultSize">
            <summary>
            The maximum number of errors that will be held in memory by default 
            if no size is specified.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.MemoryErrorLog"/> class
            with a default size for maximum recordable entries.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.MemoryErrorLog"/> class
            with a specific size for maximum recordable entries.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.MemoryErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the application memory.
            </summary>
            <remarks>
            If the log is full then the oldest error entry is removed.
            </remarks>
        </member>
        <member name="M:Elmah.MemoryErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from application memory, or null 
            if it does not exist.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)">
            <summary>
            Returns a page of errors from the application memory in
            descending order of logged time.
            </summary>
        </member>
        <member name="P:Elmah.MemoryErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
        <member name="T:Elmah.MsAjaxDeltaErrorLogModule">
            <summary>
            Module to log unhandled exceptions during a delta-update
            request issued by the client when a page uses the UpdatePanel
            introduced with ASP.NET 2.0 AJAX Extensions.
            </summary>
            <remarks>
            <para>
            This module is ONLY required when dealing with v1.0.x.x of System.Web.Extensions.dll
            (i.e. the downloadable version to extend v2.0 of the .Net Framework)
            </para>
            <para>
            Using it with v3.5 of System.Web.Extensions.dll (which shipped as part of v3.5 of the 
            .Net Framework) will result in a duplication of errors.
            </para>
            <para>
            This is because MS have changed the implementation of 
            System.Web.UI.PageRequestManager.OnPageError
            </para>
            <para>
            In v1.0.x.x, the code performs a brutal <code>Response.End();</code> in an attempt to
            "tidy up"! This means that the error will not bubble up to the Application.Error 
            handlers, so Elmah is unable to catch them.
            </para>
            <para>
            In v3.5, this is handled much more gracefully, allowing Elmah to do its thing without
            the need for this module!
            </para>
            </remarks>
        </member>
        <member name="M:Elmah.MsAjaxDeltaErrorLogModule.LogException(System.Exception,System.Web.HttpContext)">
            <summary>
            Logs an exception and its context to the error log.
            </summary>
        </member>
        <member name="T:Elmah.OracleErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses Oracle as its backing store.
            </summary>
        </member>
        <member name="M:Elmah.OracleErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.OracleErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="M:Elmah.OracleErrorLog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.OracleErrorLog"/> class
            to use a specific connection string for connecting to the database.
            </summary>
        </member>
        <member name="M:Elmah.OracleErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the database.
            </summary>
            <remarks>
            Use the stored procedure called by this implementation to set a
            policy on how long errors are kept in the log. The default
            implementation stores all errors for an indefinite time.
            </remarks>
        </member>
        <member name="M:Elmah.OracleErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)">
            <summary>
            Returns a page of errors from the databse in descending order 
            of logged time.
            </summary>
        </member>
        <member name="M:Elmah.OracleErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from the database, or null 
            if it does not exist.
            </summary>
        </member>
        <member name="P:Elmah.OracleErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
        <member name="P:Elmah.OracleErrorLog.ConnectionString">
            <summary>
            Gets the connection string used by the log to connect to the database.
            </summary>
        </member>
        <member name="T:Elmah.PoweredBy">
            <summary>
            Displays a "Powered-by ELMAH" message that also contains the assembly
            file version informatin and copyright notice.
            </summary>
        </member>
        <member name="M:Elmah.PoweredBy.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control into the specified writer.
            </summary>
        </member>
        <member name="T:Elmah.SccStamp">
            <summary>
            Represents a source code control (SCC) stamp and its components.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.#ctor(System.String)">
            <summary>
            Initializes an <see cref="T:Elmah.SccStamp"/> instance given a SCC stamp 
            ID. The ID is expected to be in the format popularized by CVS 
            and SVN.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.FindAll(System.Reflection.Assembly)">
            <summary>
            Finds and builds an array of <see cref="T:Elmah.SccStamp"/> instances 
            from all the <see cref="T:Elmah.SccAttribute"/> attributes applied to
            the given assembly.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.FindLatest(System.Reflection.Assembly)">
            <summary>
            Finds the latest SCC stamp for an assembly. The latest stamp is 
            the one with the highest revision number.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.FindLatest(Elmah.SccStamp[])">
            <summary>
            Finds the latest stamp among an array of <see cref="T:Elmah.SccStamp"/> 
            objects. The latest stamp is the one with the highest revision 
            number.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.SortByRevision(Elmah.SccStamp[])">
            <summary>
            Sorts an array of <see cref="T:Elmah.SccStamp"/> objects by their 
            revision numbers in ascending order.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.SortByRevision(Elmah.SccStamp[],System.Boolean)">
            <summary>
            Sorts an array of <see cref="T:Elmah.SccStamp"/> objects by their 
            revision numbers in ascending or descending order.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.Id">
            <summary>
            Gets the original SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.Author">
            <summary>
            Gets the author component of the SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.FileName">
            <summary>
            Gets the file name component of the SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.Revision">
            <summary>
            Gets the revision number component of the SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.LastChanged">
            <summary>
            Gets the last modification time component of the SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.LastChangedUtc">
            <summary>
            Gets the last modification time, in coordinated universal time 
            (UTC), component of the SCC stamp ID in local time.
            </summary>
        </member>
        <member name="T:Elmah.SecuritySectionHandler">
            <summary>
            Handler for the &lt;security&gt; section of the
            configuration file.
            </summary>
        </member>
        <member name="T:Elmah.SimpleServiceProviderFactory">
            <summary>
            A simple factory for creating instances of types specified in a 
            section of the configuration file.
            </summary>
        </member>
        <member name="T:Elmah.SqlErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses Microsoft SQL 
            Server 2000 as its backing store.
            </summary>
        </member>
        <member name="M:Elmah.SqlErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.SqlErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="M:Elmah.SqlErrorLog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.SqlErrorLog"/> class
            to use a specific connection string for connecting to the database.
            </summary>
        </member>
        <member name="M:Elmah.SqlErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the database.
            </summary>
            <remarks>
            Use the stored procedure called by this implementation to set a
            policy on how long errors are kept in the log. The default
            implementation stores all errors for an indefinite time.
            </remarks>
        </member>
        <member name="M:Elmah.SqlErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)">
            <summary>
            Returns a page of errors from the databse in descending order 
            of logged time.
            </summary>
        </member>
        <member name="M:Elmah.SqlErrorLog.BeginGetErrors(System.Int32,System.Int32,System.Collections.IList,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous version of <see cref="M:Elmah.SqlErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)"/>.
            </summary>
        </member>
        <member name="M:Elmah.SqlErrorLog.EndGetErrors(System.IAsyncResult)">
            <summary>
            Ends an asynchronous version of <see cref="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)"/>.
            </summary>
        </member>
        <member name="M:Elmah.SqlErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from the database, or null 
            if it does not exist.
            </summary>
        </member>
        <member name="P:Elmah.SqlErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
        <member name="P:Elmah.SqlErrorLog.ConnectionString">
            <summary>
            Gets the connection string used by the log to connect to the database.
            </summary>
        </member>
        <member name="T:Elmah.SqlErrorLog.AsyncResultWrapper">
            <summary>
            An <see cref="T:System.IAsyncResult"/> implementation that wraps another.
            </summary>
        </member>
        <member name="T:Elmah.StringTranslation">
            <summary>
            Provides translation from multiple representations of a string to a
            single base representation.
            </summary>
        </member>
        <member name="T:Elmah.SQLiteErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses SQLite as its backing store.
            </summary>
        </member>
        <member name="M:Elmah.SQLiteErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.SQLiteErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="M:Elmah.SQLiteErrorLog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.SQLiteErrorLog"/> class
            to use a specific connection string for connecting to the database.
            </summary>
        </member>
        <member name="M:Elmah.SQLiteErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the database.
            </summary>
            <remarks>
            Use the stored procedure called by this implementation to set a
            policy on how long errors are kept in the log. The default
            implementation stores all errors for an indefinite time.
            </remarks>
        </member>
        <member name="M:Elmah.SQLiteErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)">
            <summary>
            Returns a page of errors from the databse in descending order 
            of logged time.
            </summary>
        </member>
        <member name="M:Elmah.SQLiteErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from the database, or null 
            if it does not exist.
            </summary>
        </member>
        <member name="P:Elmah.SQLiteErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
        <member name="P:Elmah.SQLiteErrorLog.ConnectionString">
            <summary>
            Gets the connection string used by the log to connect to the database.
            </summary>
        </member>
        <member name="T:Elmah.TestException">
            <summary>
            The exception that is thrown when to test the error logging 
            subsystem. This exception is used for testing purposes only and 
            should not be used for any other purpose.
            </summary>
        </member>
        <member name="M:Elmah.TestException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.TestException"/> class.
            </summary>
        </member>
        <member name="M:Elmah.TestException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.TestException"/> class 
            with a specified error message.
            </summary>
        </member>
        <member name="M:Elmah.TestException.#ctor(System.String,System.Exception)">
            <summary>
            ializes a new instance of the <see cref="T:Elmah.TestException"/> 
            class with a specified error message and a reference to the 
            inner exception that is the cause of this exception.
            </summary>
        </member>
        <member name="M:Elmah.TestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.TestException"/> class 
            with serialized data.
            </summary>
        </member>
        <member name="T:Elmah.VistaDBErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses VistaDB as its backing store.
            </summary>
        </member>
        <member name="M:Elmah.VistaDBErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.VistaDBErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="M:Elmah.VistaDBErrorLog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.VistaDBErrorLog"/> class
            to use a specific connection string for connecting to the database.
            </summary>
        </member>
        <member name="M:Elmah.VistaDBErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the database.
            </summary>
            <remarks>
            Use the stored procedure called by this implementation to set a
            policy on how long errors are kept in the log. The default
            implementation stores all errors for an indefinite time.
            </remarks>
        </member>
        <member name="M:Elmah.VistaDBErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)">
            <summary>
            Returns a page of errors from the databse in descending order 
            of logged time.
            </summary>
        </member>
        <member name="M:Elmah.VistaDBErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from the database, or null 
            if it does not exist.
            </summary>
        </member>
        <member name="P:Elmah.VistaDBErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
        <member name="P:Elmah.VistaDBErrorLog.ConnectionString">
            <summary>
            Gets the connection string used by the log to connect to the database.
            </summary>
        </member>
        <member name="T:Elmah.XmlFileErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses XML files stored on 
            disk as its backing store.
            </summary>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.XmlFileErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.MapPath(System.String)">
            <remarks>
            This method is excluded from inlining so that if 
            HostingEnvironment does not need JIT-ing if it is not implicated
            by the caller.
            </remarks>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.XmlFileErrorLog"/> class
            to use a specific path to store/load XML files.
            </summary>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the database.
            </summary>
            <remarks>
            Logs an error as a single XML file stored in a folder. XML files are named with a
            sortable date and a unique identifier. Currently the XML files are stored indefinately.
            As they are stored as files, they may be managed using standard scheduled jobs.
            </remarks>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.IList)">
            <summary>
            Returns a page of errors from the folder in descending order 
            of logged time as defined by the sortable filenames.
            </summary>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from the filesystem, or throws an exception if it does not exist.
            </summary>
        </member>
        <member name="P:Elmah.XmlFileErrorLog.LogPath">
            <summary>
            Gets the path to where the log is stored.
            </summary>
        </member>
        <member name="P:Elmah.XmlFileErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
    </members>
</doc>
